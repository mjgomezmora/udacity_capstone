version: 2.1

orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3

jobs:
  lint-docker:
    docker:
      - image: cimg/node:16.0.0
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Lint Dockerfile
          command: |
            wget -O ./hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x ./hadolint
            ./hadolint Dockerfile
  build-python-app:
    docker:
      - image: circleci/python:3.7.3-stretch
        environment:
          FLASK_CONFIG: testing
    steps:
      - checkout
      - run:
          name: Setup the virtual environment
          command: |
            echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            echo 'export IMAGE_NAME=capstone_image' >> $BASH_ENV 
            virtualenv capostoneenv
            . capostoneenv/bin/activate
            pip install --no-cache-dir -r requirements.txt
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push Docker image
          command: |
            . capostoneenv/bin/activate
            docker build -t mjgmora/$IMAGE_NAME:$TAG .
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push mjgmora/$IMAGE_NAME:$TAG
  deploy-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - run: yum install -y tar gzip
      - run:
          name: Install eks dependencies
          command: |
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin      
#      - run:
#          name: Create eks cluster in aws using Cloudformation and Ansible
#          command: |
#      - run:
#          name: Create deployment in eks
#          command: |
#      - run:
#          name: Delete eks cluster
#          command: |
workflows:
  capstone-workflow:
    jobs:
      - lint-docker
      - build-python-app:
          requires: [lint-docker]
      - deploy-infrastructure
