version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.4.0

jobs:
  lint-docker:
    docker:
      - image: cimg/node:16.0.0
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Lint Dockerfile
          command: |
            wget -O ./hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x ./hadolint
            ./hadolint Dockerfile
  build-python-app:
    docker:
      - image: circleci/python:3.7.3-stretch
        environment:
          FLASK_CONFIG: testing
    steps:
      - checkout
      - run:
          name: Setup the virtual environment
          command: |
            echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            echo 'export IMAGE_NAME=capstone_image' >> $BASH_ENV 
            virtualenv capostoneenv
            . capostoneenv/bin/activate
            pip install --no-cache-dir -r requirements.txt
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push Docker image
          command: |
            . capostoneenv/bin/activate
            docker build -t mjgmora/$IMAGE_NAME:$TAG .
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push mjgmora/$IMAGE_NAME:$TAG
#  create-cluster:
#    docker:
#      - image: amazon/aws-cli
#    executor: aws-eks/python3
#    parameters:
#      cluster-name:
#        description: |
#          Name of the EKS cluster
#        type: string
#    steps:
#      - checkout
#      - aws-eks/install-aws-iam-authenticator:
#          release-tag: ''
#      - aws-eks/create-cluster:
#          cluster-name: << parameters.cluster-name >>
#          skip-kubectl-install: false
#          verbose: 3
#          node-type: t2.small
#          nodes-max: 2
#          ssh-access: false
#          ssh-public-key: ''
  create-service:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the AWS EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: service.json
          resource-name: service/bluegreenlb
  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployment.json
          resource-name: deployment/blue
  test-cluster:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install:
          kubectl-version: v1.22.0
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            kubectl get services
          name: Test cluster          
workflows:
  capstone-workflow:
    jobs:
      - lint-docker
      - build-python-app:
          requires: 
            - lint-docker
      - aws-eks/create-cluster:
          cluster-name: eks-demo-deployment
          requires:
            - build-python-app
      - test-cluster:
          cluster-name: eks-demo-deployment
          requires:
          - aws-eks/create-cluster
      - create-service:
          cluster-name: eks-demo-deployment
          requires:
          - test-cluster
      - create-deployment:
          cluster-name: eks-demo-deployment
          requires:
            - create-service
      - aws-eks/update-container-image:
          cluster-name: eks-demo-deployment
          container-image-updates: 'blue=mjgmora/capstone_image:0.1.${CIRCLE_BUILD_NUM}'
          record: true
          requires:
            - create-deployment
          resource-name: deployment/blue
      - aws-eks/delete-cluster:
          cluster-name: eks-demo-deployment
          requires:
            - aws-eks/update-container-image     
          